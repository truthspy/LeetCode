/**
 * 找规律
 * 可以看出从5开始，数字都需要先拆出所有的3，一直拆到剩下一个数为2或者4，因为剩4就不用再拆了，拆成两个2和不拆没有意义，而且4不
 * 能拆出一个3剩一个1，这样会比拆成2+2的乘积小
 * 数字7拆分结果是数字4的三倍，而7比4正好大三，数字8拆分结果是数字5的三倍，而8比5大3，后面都是这样的规律，那么我们可以把数字6
 * 之前的拆分结果都列举出来，然后之后的数通过查表都能计算出来
 */
class Solution {
public:
    int integerBreak(int n) {
        vector<int> res = {0, 0, 1, 2, 4, 6, 9};
        for(int i = 7; i <= n; i ++) {
            res.push_back(3 * res[i - 3]);
        }
        return res[n];
    }
};
